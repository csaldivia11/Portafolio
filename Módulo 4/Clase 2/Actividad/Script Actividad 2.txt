-- 1. ESQUEMA DE LA BASE DE DATOS
-- Cuatro tablas relacionadas con claves primarias y foráneas

CREATE TABLE clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombre VARCHAR(100),
    correo VARCHAR(100) UNIQUE,
    telefono VARCHAR(15)
);

CREATE TABLE productos (
    id_producto SERIAL PRIMARY KEY,
    codigo_producto VARCHAR(10) UNIQUE NOT NULL,
    nombre_producto VARCHAR(100),
    precio DECIMAL(10, 2)
);

CREATE TABLE pedidos (
    id_pedido SERIAL PRIMARY KEY,
    id_cliente INT REFERENCES clientes(id_cliente),
    fecha_pedido DATE DEFAULT CURRENT_DATE
);

CREATE TABLE detalle_pedidos (
    id_detalle SERIAL PRIMARY KEY,
    id_pedido INT REFERENCES pedidos(id_pedido),
    id_producto INT REFERENCES productos(id_producto),
    cantidad INT CHECK (cantidad > 0),
    precio_unitario DECIMAL(10, 2),
    UNIQUE(id_pedido, id_producto)
);

-- 2. INSERCIÓN DE DATOS

-- Insertar 3 clientes
INSERT INTO clientes (nombre, correo, telefono) VALUES
('Carlos Saldivia', 'carlos.saldivia@kibernum.cl', '+56912345678'),
('Eduardo Villegas', 'eduardo.villegas@kibernum.cl', '+56987654321'),
('Mario Inostroza', 'mario.inostroza@kibernum.cl', '+56955555555');

-- Insertar 3 productos (con códigos únicos)
INSERT INTO productos (codigo_producto, nombre_producto, precio) VALUES
('ELEC001', 'Smartphone POCO F7', 599000.00),
('ELEC002', 'Audífonos Bluetooth', 89000.00),
('ROPA001', 'Polera Algodón Básica', 25000.00);

-- Insertar 2 pedidos
INSERT INTO pedidos (id_cliente, fecha_pedido) VALUES
(1, '2025-07-15'),
(2, '2025-07-16');

-- Insertar detalles de pedidos
INSERT INTO detalle_pedidos (id_pedido, id_producto, cantidad, precio_unitario) VALUES
-- Pedido 1: Smartphone + Polera
(1, 1, 1, 599000.00),
(1, 3, 2, 25000.00),
-- Pedido 2: Audífonos + Polera
(2, 2, 1, 89000.00),
(2, 3, 1, 25000.00);

-- 3. CREACIÓN DE ÍNDICES

-- Índice 1: En correo de clientes (búsquedas frecuentes de login)
CREATE INDEX idx_clientes_correo ON clientes(correo);

-- Índice 2: En código de producto (búsquedas por código único)
CREATE INDEX idx_productos_codigo ON productos(codigo_producto);

-- JUSTIFICACIÓN:
-- idx_clientes_correo: Mejora búsquedas de clientes por email en procesos de login/autenticación
-- idx_productos_codigo: Acelera búsquedas de productos por código en gestión de inventario

-- 4. CREACIÓN DE VISTA

CREATE VIEW vista_pedidos_completa AS
SELECT 
    p.id_pedido,
    p.fecha_pedido,
    c.nombre AS cliente_nombre,
    c.correo,
    pr.codigo_producto,
    pr.nombre_producto,
    dp.cantidad,
    dp.precio_unitario,
    (dp.cantidad * dp.precio_unitario) AS subtotal_producto
FROM pedidos p
JOIN clientes c ON p.id_cliente = c.id_cliente
JOIN detalle_pedidos dp ON p.id_pedido = dp.id_pedido
JOIN productos pr ON dp.id_producto = pr.id_producto
ORDER BY p.fecha_pedido DESC;

-- 5. OPTIMIZACIÓN Y ANÁLISIS DE CONSULTA

-- Consulta relevante para área de ventas: Total de ventas por cliente
EXPLAIN ANALYZE
SELECT 
    cliente_nombre,
    correo,
    COUNT(*) AS productos_comprados,
    SUM(cantidad) AS total_unidades,
    SUM(subtotal_producto) AS total_gastado
FROM vista_pedidos_completa
GROUP BY cliente_nombre, correo
ORDER BY total_gastado DESC;

-- Consulta adicional para verificar uso de índice por correo
EXPLAIN ANALYZE
SELECT * FROM clientes WHERE correo = 'carlos.saldivia@kibernum.cl';

-- Consulta adicional para verificar uso de índice por código de producto
EXPLAIN ANALYZE
SELECT * FROM productos WHERE codigo_producto = 'ELEC001';
